<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[hexo之站点配置和next主题配置]]></title>
      <url>%2F2017%2F04%2F07%2Fhexo-next%2F</url>
      <content type="text"><![CDATA[给丑丑的默认hexo换个皮肤、 一、站点配置 一、next主题配置http://www.tuicool.com/articles/ueI7naVNext主题文档：http://theme-next.iissnan.com/Rss:$ npm install hexo-generator-feed –save]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[看好看的颜色也是一种幸福]]></title>
      <url>%2F2017%2F04%2F07%2Fcolor%2F</url>
      <content type="text"><![CDATA[#0080ff]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hexo搭建个人博客]]></title>
      <url>%2F2017%2F04%2F07%2Fhexo%2F</url>
      <content type="text"><![CDATA[很酷啊~hexo+github,再加上十几二十块买个酷酷的域名,完成这个小站哦~写写学习笔记，写写杂七杂八的小东西，虽然可能没什么人来看，但是，我开心呀~~~ 一、hexo先配hexo再拉git库吧，不然.git文件在hexo初始化的时候被删掉也是一个心烦的事情内。//1、安装node环境（基本可以忽略，都装了吧）1$ cnpm install npm -g//2、全局安装hexo依赖1$ npm install -g hexo-cli//3、初始化博客文件夹1$ npm init [folder]第一次尝试的报错：说是swig和minimatch要升级到3.0.2的问题，那就在安装一下swig,再升级一下minimatch咯12$ npm install swig$ npm minimatch@”3.0.2”第二次尝试的报错：还是swig有问题咯，那就再装，哼，明明绿了第三次尝试的报错：还是跟第二次一样！！还有这个关于fsevents的报错，是可以忽略的反正他跟你说缺啥，你就用npm install补啥看到INFO Start blogging with Hexo!这句话就ok啦//4、启动hexo123$ hexo sever//或者$ hexo s如果前面看到INFO Start blogging with Hexo!，这一步基本没问题。听话地去浏览器打开http://localhost:4000，然后看到这样没有报错最开心了！！第一步搞定！这是hexo的默认主题和配置，然后就可以开始屁颠屁颠改成自己喜欢的样子了咧。二、github//1、建立github库Tip:命名必须 账户名.github.io//2、项目拉取到本地1$ git clone https://github.com/yourname/yourname.github.io三、hexo/github大合体//1、hexo配置修改 1234567node_modules --&gt;scaffolds --&gt;source --&gt; 文章、图片等资源themes --&gt; 站点主题的相关配置.gitignore --&gt;_config.yml --&gt; 主要改这个文件！！！package.json --&gt; yes!打开_config.yml,就先改# Site和# Deployment这两部分先，其他的以后熟了再细看吧。去看完整版(有空再写哈哈)[_config.yml]12345678910# Sitetitle: #你的网站的名字咧subtitle: #你的网站的副标题咧description: #你的网站的描述咧author: #你的大名咧# Deploymentdeploy: type: git repo: https://github.com/yourname/yourname.github.io.git branch: master 千万千万不要忘记每个冒号后面都要有空格！！WTF! //2、hexo新建文章12345//新建文章$ hexo new test //默认post//新建草稿和文件夹（先别试这个）$ hexo new draft test$ hexo new page test 可以发现source文件夹下的_posts文件夹下多了一个test.md的文件， [test.md]12345---title: test //该文章标题，可以和文件名不一样的date: 2017-04-07 15:00:51tags: //标签，多个用数组[ tag1 , tag2 ]--- //3、hexo打包1$ hexo generate //打包，等同于hexo g //4、hexo同步到git1$ hexo deploy //上传git,等同于hexo d 如果出现下图，一定是前面的_config.yml里面的# Deployment部分没有配置好。 注意红色部分也要有个空格！WTF! 四、世界宇宙超级无敌酷的域名合体 五、hexo常用语句整理12345$ hexo n = hexo new //新建$ hexo s = hexo server //开启$ hexo c = hexo clean //清缓存 $ hexo g = hexo generate //打包$ hexo d = hexo deploy //上传git]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[nothing]]></title>
      <url>%2F2017%2F03%2F30%2Fnothing%2F</url>
      <content type="text"><![CDATA[不想撸码的时候要看看电影看看书、 书单：电影： 1.《暗夜恐惧》8个黑白简约风小故事]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Babel安装、编译、配置（phpstorm）]]></title>
      <url>%2F2017%2F03%2F27%2Fbabel%2F</url>
      <content type="text"><![CDATA[讲道理 这里我要找一张好看的图片（没写完啊没写完，不生气了再写） 一、开始Babel转码器工具：phpstorm10.0.3环境：Windows 10好多爹一样的浏览器不支持666的ES6啊！大Babel帮你ES6编译成ES5哦~省事儿~作用： ①让code支持es6 ②支持react的一些特性（eg:JSX）二、安装1cnpm install babel-cli -g三、编译//1、自动编译①es6文件夹底下新建es6.js123let number = [1,2,3];let double = number.map((n) =&gt; n*2);console.log(double);如果出现红红黄黄的报错↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓File =&gt; settings =&gt; Languages =&gt; JavaScript =&gt; JavaScript language version 改为ECMAScript6然后apply一下、②添加事件监听这个时候，如果讲道理的话，自己会弹出来这个，那就很happy地点击add添加事件监听。不讲道理的话，↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓File =&gt; settings =&gt; Tools =&gt; File Watchers =&gt; + =&gt; Babel名字随意取咯~如果这个时候apply,不设置编译后目标文件夹，默认是在该文件下生成一个js和js.mapTips:在babel监听配置之前，已存在的js文件，需要发生修改，才会触发自动编译。可以在中间回车几下。不过好丑好难过啊，还是整一个文件夹给它吧(自动编译定位在虚线内，也可以跳过啊，并没有影响) (–虚线start–)好啦好啦，开始正式配置了、主要修改scope 和 output paths,就是编译前的文件夹和编译后的文件夹 需要进行编译的文件夹：绿色框框的是哪个按钮啥意思自己去百度哈，总之就是选文件夹用的、如果这个时候apply,不设置编译后目标文件夹，默认是在该文件下生成一个js和js.map 1$FileNameWithoutExtension$-compiled.js:$FileNameWithoutExtension$-compiled.js.map 1$ProjectFileDir$\es5\$FileNameWithoutExtension$.js (–虚线end–) //2、手动编译通过phpstorm下面的terminal1$ babel es6/es6.js -o es5/es5.js四、配置前面新建的es5.js和源文件es6.js是一毛一样的，毕竟还没有配置。//1、新建配置文件.babelrc 1234&#123;"presets":[],"plugins":[]&#125; //2、安装预设 1$ cnpm install --save-dev babel-preset-es2015 啊啊啊啊啊啊啊啊啊啊啊啊啊！！！！！答应我这一步千万不要用Terminal来装！！不要用Terminal来装！！不要用Terminal来装！！会炸啊会炸！！老老实实把这个项目关了去打开cmd！无响应了一个世纪、看到红色的这句话，省你一个小时时间！装完趁早吧，好气！也别轻易把node_modules给ignore，找个吃饭的时间弄，不然真当卡死。哦，还有气死！另外，如果phpstorm一直好卡一直indexing的话，可以在phpstorm.vmoptions里面，最后加上12-Dawt.usesystemAAFontSettings=lcd -Dawt.java2d.opengl=true 回归正题，在.babelrc文件里加上es2015的字段1234&#123;"presets":['es2015'],"plugins":[]&#125; //3、安装展开符插件1$ cnpm install babel-plugin-transform-object-rest-spread --save-dev 在.babelrc文件里加上transform-object-rest-spread的字段1234&#123;"presets":['es2015'],"plugins":['transform-object-rest-spread']&#125;]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[LESS环境部署]]></title>
      <url>%2F2017%2F03%2F24%2Fless%2F</url>
      <content type="text"><![CDATA[等等再发咯]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[第一篇test]]></title>
      <url>%2F2017%2F03%2F22%2Ftest1%2F</url>
      <content type="text"><![CDATA[1 + 1 = 11 ? nothing测试1测试2[reset.css]1body &#123; margin: 0; padding: 0; &#125; 一、一级标题//2、二级标题红的呢]]></content>
    </entry>

    
  
  
</search>
